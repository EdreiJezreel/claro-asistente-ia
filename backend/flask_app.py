from flask import Flask, request, jsonify
from flask_cors import CORS
from twilio.twiml.messaging_response import MessagingResponse
from twilio.rest import Client
import os
from dotenv import load_dotenv
from calendar_routes import calendar_bp
import logging
import requests
import json

from flask_limiter import Limiter
from flask_limiter.util import get_remote_address

load_dotenv()

app = Flask(__name__)
CORS(app)
# Registrar rutas de calendario
app.register_blueprint(calendar_bp)
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# ==================== CONFIGURAR RATE LIMITER ====================
limiter = Limiter(
    get_remote_address,  # ‚úÖ Solo la funci√≥n key_func como primer argumento
    app=app,              # ‚úÖ app como keyword argument
    default_limits=["200 per day", "50 per hour"],
    storage_uri="memory://"
)

# ==================== MANEJADOR DE ERRORES 429 ====================
@app.errorhandler(429)
def ratelimit_handler(e):
    return jsonify({
        "success": False,
        "error": "Demasiadas peticiones",
        "message": "Por favor espera unos segundos antes de enviar otro mensaje. Esto ayuda a mantener el servicio estable para todos. üòä",
        "retry_after_seconds": 10
    }), 429

# ==================== CONFIGURACI√ìN ====================
TWILIO_ACCOUNT_SID = os.getenv("TWILIO_ACCOUNT_SID")
TWILIO_AUTH_TOKEN = os.getenv("TWILIO_AUTH_TOKEN")
TWILIO_WHATSAPP_NUMBER = os.getenv("TWILIO_WHATSAPP_NUMBER", "whatsapp:+14155238886")

GROQ_API_KEY = os.getenv("GROQ_API_KEY")
PORT = int(os.getenv("PORT", 10000))

# ==================== INICIALIZAR CLIENTES ====================
try:
    if TWILIO_ACCOUNT_SID and TWILIO_AUTH_TOKEN:
        twilio_client = Client(TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)
        logger.info("‚úÖ Cliente Twilio inicializado correctamente")
    else:
        logger.warning("‚ö†Ô∏è Credenciales de Twilio no configuradas")
        twilio_client = None
except Exception as e:
    logger.error(f"‚ùå Error inicializando Twilio: {str(e)}")
    twilio_client = None

try:
    if GROQ_API_KEY:
        from groq import Groq
        client = Groq(api_key=GROQ_API_KEY)
        logger.info("‚úÖ Cliente Groq inicializado correctamente")
    else:
        logger.error("‚ùå GROQ_API_KEY no configurada en variables de entorno")
        client = None
except TypeError as e:
    if "proxies" in str(e):
        logger.warning("‚ö†Ô∏è Versi√≥n incompatible de Groq, usando fallback directo a API")
        client = "api_fallback"
    else:
        logger.error(f"‚ùå Error inicializando Groq: {str(e)}")
        client = None
except Exception as e:
    logger.error(f"‚ùå Error inicializando Groq: {str(e)}")
    client = None

# ==================== MEMORIA DE CONVERSACI√ìN MEJORADA ====================
CHAT_MEMORY = {}

def _get_user_key():
    """Genera una clave simple para identificar al cliente basada en IP y User-Agent."""
    ip = request.remote_addr or "unknown"
    ua = request.headers.get("User-Agent", "")
    return f"{ip}:{ua}"

# ==================== NUEVA FUNCI√ìN: DETECTAR CAMBIO DE CONTEXTO ====================
def detect_context_change(current_message, previous_messages):
    """
    Detecta si el mensaje actual es de un contexto COMPLETAMENTE DIFERENTE
    a los mensajes anteriores.
    
    Returns: True si hay cambio de contexto, False si es continuaci√≥n
    """
    if not previous_messages or len(previous_messages) == 0:
        return False
    
    # Obtener el contexto del mensaje actual
    current_context = detect_main_topic(current_message)
    
    # Obtener contextos de mensajes anteriores
    previous_contexts = [detect_main_topic(msg) for msg in previous_messages]
    
    # Si el contexto actual es diferente a TODOS los anteriores, es cambio de contexto
    if current_context and all(current_context != prev_ctx for prev_ctx in previous_contexts if prev_ctx):
        logger.info(f"üîÑ CAMBIO DE CONTEXTO detectado: {previous_contexts[-1] if previous_contexts else 'none'} ‚Üí {current_context}")
        return True
    
    return False

def detect_main_topic(text):
    """
    Detecta el tema principal del mensaje.
    Retorna: 'telecom', 'education', 'health', 'task', 'general'
    """
    text_lower = text.lower()
    
    # Palabras clave espec√≠ficas por tema
    telecom_keywords = ['claro', 'telcel', 'a1', 'plan', 'internet', 'telefon', 'm√≥vil', 'movil', 
                        'datos', 'paquete', 'recarga', 'operador', 'se√±al']
    
    education_keywords = ['curso', 'aprender', 'estudiar', 'educaci', 'diploma', 'universidad',
                         'ingl√©s', 'ingles', 'programa', 'capacita', 'aprende.org', 'clase',
                         'ense√±a', 'profesor', 'escuela', 'carrera', 'profesional']
    
    health_keywords = ['salud', 'medic', 'doctor', 'enfermedad', 'diabetes', 'presi√≥n', 'presion',
                      'nutrici√≥n', 'nutricion', 'dieta', 'ejercicio', 'hospital', 'sintoma',
                      'tratamiento', 'clikisalud', 'clinica']
    
    task_keywords = ['recordar', 'recuerdame', 'recu√©rdame', 'agenda', 'agendar', 'nota', 'anota',
                    'guardar', 'programa']
    
    # Contar coincidencias
    telecom_count = sum(1 for kw in telecom_keywords if kw in text_lower)
    education_count = sum(1 for kw in education_keywords if kw in text_lower)
    health_count = sum(1 for kw in health_keywords if kw in text_lower)
    task_count = sum(1 for kw in task_keywords if kw in text_lower)
    
    # Determinar tema predominante
    counts = {
        'telecom': telecom_count,
        'education': education_count,
        'health': health_count,
        'task': task_count
    }
    
    max_count = max(counts.values())
    
    if max_count == 0:
        return 'general'
    
    # Retornar el tema con m√°s coincidencias
    for topic, count in counts.items():
        if count == max_count:
            return topic
    
    return 'general'

# ==================== NUEVA FUNCI√ìN: OBTENER MEMORIA RELEVANTE ====================
def get_relevant_memory(user_key, current_message):
    """
    Obtiene solo la memoria RELEVANTE al contexto actual.
    Si hay cambio de contexto, limpia la memoria autom√°ticamente.
    """
    mem = CHAT_MEMORY.get(user_key, [])
    
    if not mem:
        return []
    
    # Detectar si hay cambio de contexto
    if detect_context_change(current_message, mem):
        logger.info(f"üßπ Limpiando memoria anterior por cambio de contexto")
        CHAT_MEMORY[user_key] = []  # Limpiar memoria
        return []
    
    # Si no hay cambio, retornar solo el √∫ltimo mensaje (en lugar de 3)
    # Esto reduce la "contaminaci√≥n" de contexto
    return mem[-1:] if mem else []

# ==================== URLs Y DETECCI√ìN (MANTENER IGUAL) ====================
URLS = {
    "claro": {
            "Argentina": [
        "https://www.claro.com.ar/personas",
        "https://www.claro.com.ar/negocios",
        "https://www.claro.com.ar/empresas"
    ],
    "Brasil": [
        "https://www.claro.com.br/",
        "https://www.claro.com.br/empresas",
        "https://www.claro.com.br/empresas/grandes-empresas-e-governo"
    ],
    "Chile": [
        "https://www.clarochile.cl/personas/",
        "https://www.clarochile.cl/negocios/",
        "https://www.clarochile.cl/empresas/"
    ],
    "Colombia": [
        "https://www.claro.com.co/personas/",
        "https://www.claro.com.co/negocios/",
        "https://www.claro.com.co/empresas/",
        "https://www.claro.com.co/institucional/"
    ],
    "Costa Rica": [
        "https://www.claro.cr/personas/",
        "https://www.claro.cr/empresas/",
        "https://www.claro.cr/institucional/"
    ],
    "Ecuador": [
        "https://www.claro.com.ec/personas/",
        "https://www.claro.com.ec/negocios/",
        "https://www.claro.com.ec/empresas/"
    ],
    "El Salvador": [
        "https://www.claro.com.sv/personas/",
        "https://www.claro.com.sv/empresas/",
        "https://www.claro.com.sv/institucional/"
    ],
    "Guatemala": [
        "https://www.claro.com.gt/personas/",
        "https://www.claro.com.gt/empresas/",
        "https://www.claro.com.gt/institucional/"
    ],
    "Honduras": [
        "https://www.claro.com.hn/personas/",
        "https://www.claro.com.hn/empresas/",
        "https://www.claro.com.hn/institucional/"
    ],
    "Nicaragua": [
        "https://www.claro.com.ni/personas/",
        "https://www.claro.com.ni/empresas/",
        "https://www.claro.com.ni/institucional/"
    ],
    "Panam√°": [],
    "Paraguay": [
        "https://www.claro.com.py/personas",
        "https://www.claro.com.py/empresas"
    ],
    "Per√∫": [
        "https://www.claro.com.pe/personas/",
        "https://www.claro.com.pe/empresas/"
    ],
    "Puerto Rico": [
        "https://www.claropr.com/personas/",
        "https://www.claropr.com/empresas/"
    ],
    "Rep√∫blica Dominicana": [
        "https://www.claro.com.do/personas/",
        "https://www.claro.com.do/negocios/",
        "https://www.claro.com.do/empresas/"
    ],
    "Uruguay": [
        "https://www.claro.com.uy/personas",
        "https://www.claro.com.uy/empresas"
    ],
    },
    "telcel": [
            "https://www.telcel.com/",
            "https://www.telcel.com/personas/planes-de-renta/tarifas-y-opciones/telcel-libre?utm_source=gg&utm_medium=sem&utm_campaign=52025_gg_AONPTL2025_visitas_pospago_planlibre_brand&utm_content=gg_planestelcel_nacional___intereses_texto&utm_term=gg_planestelcel_nacional___intereses_texto&gclsrc=aw.ds&&campaignid=22494109880&network=g&device=c&gad_source=1&gad_campaignid=22494109880&gclid=EAIaIQobChMIltP0qd6DkAMVwiRECB2H0jZLEAAYASAAEgLsQPD_BwE"
            "https://www.telcel.com/personas/planes-de-renta/tarifas-y-opciones",
            "https://www.telcel.com/personas/amigo/paquetes/paquetes-amigo-sin-limite",
            "https://www.telcel.com/personas/amigo/paquetes/mb-para-tu-amigo",
            "https://www.telcel.com/personas/amigo/paquetes/internet-por-tiempo",
            "https://www.telcel.com/personas/amigo/paquetes/internet-mas-juegos",
    ],
    "a1": {
        "austria": ["https://a1.group/a1-group-and-markets/a1-in-austria/"],
        "bulgaria": ["https://a1.group/a1-group-and-markets/a1-in-bulgaria/"],
        "croacia": ["https://a1.group/a1-group-and-markets/a1-in-croatia/"],
        "bielorrusia": ["https://a1.group/a1-group-and-markets/a1-in-belarus/"],
        "serbia": ["https://a1.group/a1-group-and-markets/a1-in-serbia/"],
        "eslovenia": ["https://a1.group/a1-group-and-markets/a1-in-slovenia/"],
        "macedonia": ["https://a1.group/a1-group-and-markets/a1-in-north-macedonia/"]
    },
    "education_career": {
        "plataformas_nacionales": {
            "el_salvador": [
                "https://aprendeconclaro.claro.com.sv/educacion-digital/",
                "https://aprendeconclaro.claro.com.sv/educacion-academica/"
            ],
            "colombia": ["https://www.claro.com.co/institucional/aprende-con-claro/"],
            "nicaragua": ["https://www.claro.com.ni/institucional/inclusion-digital-plataforma-educativa/"],
            "honduras": [
                "https://aprendeconclaro.claro.com.hn/educacion-digital/",
                "https://aprendeconclaro.claro.com.hn/educacion-academica/"
            ],
            "guatemala": [
                "https://aprendeconclaro.claro.com.gt/educacion-digital/",
                "https://aprendeconclaro.claro.com.gt/educacion-academica/"
            ],
            "peru": [
                "https://aprendeconclaro.claro.com.pe/educacion-digital/",
                "https://aprendeconclaro.claro.com.pe/educacion-academica/"
            ],
        },
        "aprende_org_general": {
            "principal": ["https://aprende.org/","https://aprende.org/area/educacion"],
            "areas_principales": [
                "https://aprende.org/area/educacion",
                "https://aprende.org/area/capacitate",
                "https://aprende.org/area/salud",
                "https://aprende.org/area/cultura",
                "https://aprende.org/area/formacion-humana"
            ],
            "trabajo_formacion": [
                "https://aprende.org/rutas-aprendizaje",
                "https://aprende.org/diplomados",
                "https://aprende.org/especialidades",
                "https://aprende.org/cursos/view/100848",
                "https://aprende.org/cursos/view/100847",
                "https://aprende.org/diplomado/62",
                "https://aprende.org/especialidad/6",
                "https://aprende.org/especialidad/5",
                "https://aprende.org/especialidad/4",
                "https://aprende.org/diplomado/72",
                "https://aprende.org/diplomado/71",
                "https://aprende.org/diplomado/73",
                "https://aprende.org/diplomado/33",
                "https://aprende.org/diplomado/32",
                "https://aprende.org/diplomado/31",
                "https://aprende.org/diplomado/30",
                "https://aprende.org/diplomado/29",
                "https://aprende.org/diplomado/28",
                "https://aprende.org/diplomado/27",
                "https://aprende.org/diplomado/26",
                "https://aprende.org/diplomado/25",
                "https://aprende.org/diplomado/24",
                "https://aprende.org/diplomado/23",
                "https://aprende.org/diplomado/55",
                "https://aprende.org/diplomado/35",
                "https://aprende.org/diplomado/34", 
                "https://aprende.org/especialidad/6",
                "https://aprende.org/especialidad/5",
                "https://aprende.org/especialidad/4",
                
                "https://aprende.org/ruta/49",
                "https://aprende.org/ruta/40",
                "https://aprende.org/ruta/19",
                "https://aprende.org/ruta/11",
                "https://aprende.org/ruta/21",
                "https://aprende.org/ruta/13",
                "https://aprende.org/ruta/12",
                "https://aprende.org/ruta/61",
                "https://aprende.org/ruta/14",
                "https://aprende.org/ruta/22",
                "https://aprende.org/ruta/74",
                "https://aprende.org/ruta/41",
                "https://aprende.org/ruta/20",
                "https://aprende.org/ruta/16",
                "https://aprende.org/ruta/15",
                "https://aprende.org/ruta/17",
                "https://aprende.org/ruta/38",
                "https://aprende.org/ruta/75",
                "https://aprende.org/ruta/54",
                "https://aprende.org/ruta/46",
                "https://aprende.org/ruta/45",
                "https://aprende.org/ruta/44",
                "https://aprende.org/ruta/43",
                "https://aprende.org/ruta/42",
                "https://aprende.org/ruta/10",
                "https://aprende.org/ruta/9",
            ]
        },
        "educacion_detallada": {
            "basica_y_media": [
                "https://educacioninicial.mx/capacitacion",
                "https://aprende.org/pruebat?sectionId=1",
                "https://es.khanacademy.org/",
                "https://aprende.org/pruebat?sectionId=4",
                "https://aprende.org/pruebat?sectionId=2",
                "https://aprende.org/pruebat?sectionId=1",
                "https://educacioninicial.mx/temas-interes",
                "https://educacioninicial.mx/capacitacion",
                "https://aprende.org/pruebat?sectionId=2",
                "https://aprende.org/pruebat?sectionId=1",
                "https://aprende.org/centro-estudios-historia-mexico/1456",
                "https://aprende.org/podcast-dilemas-y-consecuencias/1451",
                "https://aprende.org/historia",
                "https://aprende.org/pruebat?sectionId=10",
                "https://aprende.org/pruebat?sectionId=9",
            ],
            "superior": [
                "https://academica.mx/",
                "https://aprende.org/superior/mit/1439",
                "https://www.coursera.org/",
                "https://www.edx.org/",
                "https://www.edx.org/",
                "https://www.udacity.com/",
                "https://aprende.org/derecho",
                "https://aprende.org/superior/mit/1439",
                "https://academica.mx/?utm_source=Aprende2023&utm_medium=Web&utm_campaign=Aprende2023&utm_id=Aprende2023",
                "https://telmexeducacion.aprende.org/?utm_source=+AprendeBibliotecaDigital2023&utm_medium=Web&utm_campaign=+AprendeBibliotecaDigital2023&utm_id=+AprendeBibliotecaDigital2023",
                "https://aprende.org/programacion-para-todos",
                "https://aprende.org/desarrollo-multimedia",
                "https://aprende.org/ser-digital",
                "https://aprende.org/pruebat?sectionId=11",
                "https://aprende.org/learnmatch",
                "https://aprende.org/centro-estudios-historia-mexico/1456",
                "https://aprende.org/podcast-dilemas-y-consecuencias/1451",
                "https://aprende.org/historia",
                "https://aprende.org/pruebat?sectionId=10"
                "https://aprende.org/pruebat?sectionId=9",
            ]
        },
        "rutas_y_oficios": {
            "digital_tech": [
                "https://aprende.org/ruta/9",
                "https://aprende.org/ruta/10",
                "https://aprende.org/ser-digital",
                "https://aprende.org/programacion-para-todos",
                "https://aprende.org/ruta/75",
                "https://aprende.org/ruta/54",
                "https://aprende.org/ruta/46",
                "https://aprende.org/ruta/45",
                "https://aprende.org/ruta/44",
                "https://aprende.org/ruta/43",
                "https://aprende.org/ruta/42",
                "https://aprende.org/ruta/10",
                "https://aprende.org/ruta/9",
                "https://www.ochoenpunto.com/category/ochoenpunto/",
                "https://fasemethod.com/blog-sobre-productividad-personal/",
                "https://iagofraga.com/blog/",
            ],
            "administracion_finanzas": [
                "https://aprende.org/ruta/41",
                "https://aprende.org/ruta/74",
                "https://aprende.org/cursos/view/385",
                "https://aprende.org/cursos/view/384",
                "https://aprende.org/cursos/view/378",
                "https://aprende.org/cursos/view/100145",
                "https://aprende.org/cursos/view/113",
                "https://aprende.org/cursos/view/89",
                "https://aprende.org/cursos/view/100141",
                "https://aprende.org/cursos/view/100129",
                "https://aprende.org/cursos/view/100334",
                "https://aprende.org/cursos/view/291",
                "https://aprende.org/cursos/view/100325",
                "https://aprende.org/cursos/view/100128",
                "https://aprende.org/cursos/view/100143",
                "https://aprende.org/cursos/view/100147",
                "https://aprende.org/cursos/view/100148",
                "https://aprende.org/cursos/view/100322",
                "https://aprende.org/cursos/view/100657",
                "https://aprende.org/cursos/view/109",
                "https://aprende.org/cursos/view/320",
                "https://aprende.org/cursos/view/313",
                "https://aprende.org/cursos/view/306",
                "https://aprende.org/cursos/view/318",
                "https://aprende.org/cursos/view/178",
                "https://www.ochoenpunto.com/category/ochoenpunto/",
                "https://fasemethod.com/blog-sobre-productividad-personal/",
                "https://iagofraga.com/blog/",
            ]
        },
        "diplomados_especialidades": {
            "administracion_finanzas": [
                "https://aprende.org/cursos/view/178",
                "https://aprende.org/cursos/view/291",
                "https://aprende.org/cursos/view/89",
                "https://aprende.org/ruta/74",
                "https://aprende.org/ruta/41",
                "https://educacioninicial.mx/temas-interes",
                "https://educacioninicial.mx/capacitacion",
                "https://es.khanacademy.org/",
                "https://aprende.org/pruebat?sectionId=4"
                "https://www.ochoenpunto.com/category/ochoenpunto/",
                "https://fasemethod.com/blog-sobre-productividad-personal/",
                "https://iagofraga.com/blog/",
                "https://aprende.org/ruta/49",
            ],
            "autoempleo_negocio": [
                "https://aprende.org/cursos/view/159",
                "https://aprende.org/cursos/view/157",
                "https://aprende.org/cursos/view/162",
                "https://aprende.org/cursos/view/167",
                "https://aprende.org/cursos/view/93",
                "https://aprende.org/cursos/view/180",
                "https://aprende.org/cursos/view/169",
                "https://aprende.org/cursos/view/164",
                "https://aprende.org/cursos/view/158",
                "https://aprende.org/cursos/view/156", 
                "https://aprende.org/cursos/view/157",
                "https://aprende.org/cursos/view/100309",
                "https://aprende.org/cursos/view/160",
                "https://aprende.org/cursos/view/161",
                "https://aprende.org/cursos/view/100160",
                "https://aprende.org/cursos/view/159",
                "https://www.ochoenpunto.com/category/ochoenpunto/",
                "https://fasemethod.com/blog-sobre-productividad-personal/",
                "https://iagofraga.com/blog/",
            ],
            "libros": [
                "https://aprende.org/pruebat?sectionId=10",
                "https://aprende.org/pruebat?sectionId=9",
                "https://aprende.org/pruebat?sectionId=8",
                "https://aprende.org/pruebat?sectionId=7",
                "https://aprende.org/pruebat?sectionId=6",
                "https://aprende.org/pruebat?sectionId=5"
            ],
        }
    },
    "health": {
        "cuidado_personal_y_profesional": [
            "https://aprende.org/cuidado-salud",
            "https://aprende.org/profesionales-salud",
            "https://aprende.org/area/salud"
        ],
        "cursos_cuidado_salud": [
            "https://aprende.org/cursos/view/182",
            "https://aprende.org/cursos/view/100045",
            "https://aprende.org/cursos/view/100223"
        ],
        "manual_por_edad_clikisalud": {
            "0_a_5": ["https://www.clikisalud.net/manual-tu-salud-de-0-a-5-anos/"],
            "6_a_12": ["https://www.clikisalud.net/manual-tu-salud-de-6-a-12-anos/"],
            "13_a_17": ["https://www.clikisalud.net/manual-tu-salud-de-13-a-17-anos/"],
            "18_a_39": ["https://www.clikisalud.net/manual-tu-salud-de-18-a-39-anos/"],
            "40_a_69": ["https://www.clikisalud.net/manual-tu-salud-de-40-a-69-anos/"],
            "70_y_mas": ["https://www.clikisalud.net/manual-tu-salud-70-anos-y-mas/"]
        },
        "prevencion_y_enfermedades": {
            "diabetes": [
                "https://www.clikisalud.net/diabetes/",
                "https://www.clikisalud.net/temas-diabetes/la-prediabetes/"
            ],
            "obesidad_nutricion": [
                "https://www.clikisalud.net/obesidad/",
                "https://www.clikisalud.net/metabolismo/"
            ],
            "hipertension_corazon": [
                "https://www.clikisalud.net/corazon/"
            ],
            "cancer": [
                "https://www.clikisalud.net/cancer/",
                "https://www.clikisalud.net/temas-cancer/cancer-de-mama-autoexploracion-y-deteccion/"
            ],
            "salud_mental": [
                "https://www.clikisalud.net/saludmental/",
                "https://www.clikisalud.net/temas-depresion-y-mente/como-controlar-el-estres/"
            ]
        }
    }
}


# Mantener funciones de detecci√≥n originales
def detect_country(text):
    """Detecta pa√≠s mencionado en el texto"""
    text_lower = text.lower()
    country_keywords = {
        "mexico": ["mexico", "m√©xico", "mexicano"],
        "argentina": ["argentina", "argentino"],
        "peru": ["peru", "per√∫", "peruano"],
        "chile": ["chile", "chileno"]
    }
    for country, keywords in country_keywords.items():
        if any(keyword in text_lower for keyword in keywords):
            return country
    return None

def detect_operator(text):
    text_lower = text.lower()
    if "claro" in text_lower:
        return "claro"
    elif "telcel" in text_lower:
        return "telcel"
    elif "a1" in text_lower:
        return "a1"
    return None

def detect_health_topic(text):
    text_lower = text.lower()
    health_topics = {
        "diabetes": ["diabetes"],
        "obesidad_nutricion": ["obesidad", "nutricion"],
        "salud_mental": ["depresion", "ansiedad"]
    }
    for topic, keywords in health_topics.items():
        if any(keyword in text_lower for keyword in keywords):
            return topic
    return None

def detect_education_topic(text):
    text_lower = text.lower()
    education_topics = {
        "digital_tech": ["programacion", "tecnologia"],
        "idiomas": ["ingles", "ingl√©s"]
    }
    for topic, keywords in education_topics.items():
        if any(keyword in text_lower for keyword in keywords):
            return topic
    return None

def extract_relevant_urls(prompt):
    """Extrae URLs relevantes bas√°ndose en la consulta del usuario"""
    relevant_urls = []
    operator = detect_operator(prompt)
    health_topic = detect_health_topic(prompt)
    education_topic = detect_education_topic(prompt)
    
    if health_topic:
        relevant_urls.extend(URLS.get("health", {}).get("cuidado_personal_y_profesional", []))
    elif education_topic:
        relevant_urls.extend(URLS.get("education_career", {}).get("aprende_org_general", {}).get("principal", []))
    elif operator:
        if operator == "telcel":
            relevant_urls.extend(URLS.get("telcel", []))
        elif operator == "claro":
            for country_urls in URLS.get("claro", {}).values():
                relevant_urls.extend(country_urls[:1])
    
    return list(set(relevant_urls))[:5]

def get_context_for_query(prompt):
    """Genera contexto descriptivo para la consulta"""
    health_topic = detect_health_topic(prompt)
    education_topic = detect_education_topic(prompt)
    operator = detect_operator(prompt)
    
    if health_topic:
        return "üìã √ÅREA: SALUD Y BIENESTAR"
    elif education_topic:
        return "üìö √ÅREA: EDUCACI√ìN Y DESARROLLO PROFESIONAL"
    elif operator:
        return "üåê √ÅREA: TELECOMUNICACIONES"
    else:
        return "‚ÑπÔ∏è Asistente general disponible"

def safe_extract_relevant_urls(prompt):
    try:
        return extract_relevant_urls(prompt)
    except Exception:
        return []

def safe_get_context_for_query(prompt):
    try:
        return get_context_for_query(prompt)
    except Exception:
        return "Informaci√≥n general disponible"

def call_groq_api_directly(messages):
    url = "https://api.groq.com/openai/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {GROQ_API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "model": "llama-3.3-70b-versatile",
        "messages": messages,
        "temperature": 0.5,
        "max_tokens": 2048
    }
    response = requests.post(url, headers=headers, json=data)
    response.raise_for_status()
    return response.json()

# ==================== SYSTEM PROMPTS ====================
# COLOCA AQU√ç TU SYSTEM_PROMPT PARA WEB
SYSTEM_PROMPT = """Eres un asistente virtual multifuncional con capacidades especializadas en cuatro roles principales.
**DIRECTRIZ DE PRIORIDAD ESTRICTA:** Analiza la solicitud del usuario. **Ignora por completo** cualquier petici√≥n previa si la solicitud m√°s reciente es **expl√≠cita** y **diferente** (ej. "olvida lo anterior y dame informaci√≥n de [nuevo tema]"). Si la petici√≥n m√°s reciente es **ambigua** o de **una sola palabra** (ej. "Ingl√©s"), **SOLO entonces** utiliza el contexto inmediato anterior del usuario para inferir el tema (ej. "cursos de Ingl√©s"). **Tu respuesta debe enfocarse exclusivamente en la petici√≥n m√°s actual del usuario**, desatendiendo cualquier tema anterior que no est√© directamente relacionado o impl√≠cito en la √∫ltima solicitud.
IMPORTANTE: TODA RESPUESTA DEBE SER DEVUELTA EN MARKDOWN A EXCEPCI√ìN DE LOS ROLES QUE INDIQUEN OTRO FORMATO DE RESPUESTA DE ACUERDO A LA SIGUIENTE GU√çA:
IMPORTANTE: CUANDO SE SOLICITE INFORMACI√ìN SOBRE CURSOS PRIORIZA DAR INFORMES SOBRE APRENDE.ORG Y CAPAC√çTATE.
FORMATO MARKDOWN REQUERIDO - USA SOLO ESTOS ESTILOS SIN EXCEPCI√ìN:

**REGLAS ESTRICTAS:**
- NO uses #### o m√°s almohadillas (m√°ximo 3: #, ##, ###)
- NUNCA uses formatos fuera de esta lista
- Si necesitas un subt√≠tulo, usa ### (3 almohadillas)
- Para √©nfasis menor, usa **negrita** en lugar de encabezados 

Elemento	Sintaxis
Encabezados	
# H1
## H2
## H3
Negrita	
*texto en negrita*
Cursiva	
_texto en cursiva_
Citas	
> cita
Listas ordenadas	
1. Primer elemento
1. Segundo elemento
Listas no ordenadas	
* Primer elemento
* Segundo elemento
- Primer elemento
- Segundo elemento

L√≠nea horizontal	
---
Enlaces	
[anchor](https://enlace.tld "t√≠tulo")

**Para contenido tabular, usa formato markdown de tablas cuando sea apropiado para organizar informaci√≥n**

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
ROL 1: ASESOR ESPECIALIZADO (Respuesta conversacional)
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

TELECOMUNICACIONES:
- Claro (Argentina, Per√∫, Chile, Brazil, Colombia, Costa rica, Ecuador, El Salvador, Guatemala, Honduras, Nicaragua, Panama, Paraguay, Puerto Rico, Republica Dominicana, Uruguay, EUA): Planes m√≥viles, internet, TV y servicios empresariales
- Telcel (M√©xico): Servicios de telefon√≠a m√≥vil
- A1 Group (Europa): Operadora en Austria, Bulgaria, Croacia, Serbia, Eslovenia, Macedonia del Norte y Bielorrusia

EDUCACI√ìN Y DESARROLLO PROFESIONAL:
- Aprende.org: Plataforma educativa gratuita con cursos, diplomados y rutas de aprendizaje
- Aprende con Claro: Plataformas educativas en El Salvador, Colombia, Nicaragua, Honduras, Guatemala y Per√∫
- √Åreas: Educaci√≥n digital, habilidades t√©cnicas, finanzas personales, emprendimiento, idiomas
- Recursos: Khan Academy, Coursera, edX, MIT OpenCourseware, Acad√©mica

SALUD Y BIENESTAR:
- Clikisalud: Informaci√≥n m√©dica confiable organizada por edades (0-5, 6-12, 13-17, 18-39, 40-69, 70+)
- Cursos de salud: Diabetes, nutrici√≥n, actividad f√≠sica, lactancia materna, primeros auxilios
- Prevenci√≥n: Diabetes, obesidad, hipertensi√≥n, c√°ncer, salud mental, VIH, epilepsia

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
ROL 2: GESTOR DE RECORDATORIOS (Conversaci√≥n) 
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

ACTIVACI√ìN: Detecta √öNICAMENTE cuando el usuario solicite EXPL√çCITAMENTE crear recordatorios con verbos de acci√≥n como:
- "Recu√©rdame que...", "Recordarme que...", "Av√≠same cuando..."
- NUNCA actives este rol para preguntas generales, saludos o conversaci√≥n normal

IMPORTANTE: NO es recordatorio si el usuario solo:
- Pregunta algo ("¬øqu√© es...?", "dime sobre...", "c√≥mo...")
- Saluda ("hola", "buenos d√≠as")
- Escribe una sola palabra ("comida", "casa", "ingles")

RESPUESTA REQUERIDA SOLO SI ES RECORDATORIO EXPL√çCITO:
1. Texto conversacional con emoji ‚úÖ confirmando el recordatorio
IMPORTANTE: Una vez generado el recordatorio, ya no indiques la posibilidad de modificar el evento, SOLO RESPONDE "He creado tu recordatorio... " sin indicar la posibilidad de sobreescribir el recordatorio. 


‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
ROL 3: GESTOR DE NOTAS (Conversaci√≥n) 
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

ACTIVACI√ìN: Detecta cuando el usuario solicite guardar informaci√≥n con frases como:
- "Crear nota", "Guardar esta informaci√≥n", "Anota esto...", "Toma nota de..." NO HAGAS MENCI√ìN QUE DEVOLVER√ÅS UN HTML

RESPUESTA REQUERIDA:
1. Texto conversacional confirmando la nota creada

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
ROL 4: GESTOR DE AGENDA (Conversaci√≥n)
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

ACTIVACI√ìN: Detecta cuando el usuario solicite agendar eventos con frases como:
- "Agendar", "Programar cita/reuni√≥n", "A√±adir evento", "Tengo una reuni√≥n..." NO HAGAS MENCI√ìN QUE DEVOLVER√ÅS UN HTML

RESPUESTA REQUERIDA:
1. Texto conversacional confirmando el evento agendado. 

IMPORTANTE: Una vez generado el evento, ya no indiques la posibilidad de modificar el evento, SOLO RESPONDE "He agendado tu evento... " sin indicar la posibilidad de sobreescribir el evento. 

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
INSTRUCCIONES GENERALES DE RESPUESTA
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

1. DETECCI√ìN DE INTENCI√ìN:
   - Identifica si el usuario necesita: informaci√≥n (ROL 1), recordatorio (ROL 2), nota (ROL 3) o agenda (ROL 4)
   - Puedes activar m√∫ltiples roles si la consulta lo requiere

2. PARA ROL 1 (ASESOR):
   - Identifica el √°rea de inter√©s (telecom, educaci√≥n o salud)
   - Proporciona informaci√≥n relevante y espec√≠fica
   - Incluye enlaces √∫tiles cuando corresponda: {urls}
   - Usa el contexto espec√≠fico disponible: {context}
   - Si no est√°s seguro, ofrece las opciones disponibles

3. PARA ROLES 2, 3, 4 (RECORDATORIOS/NOTAS/AGENDA):
   - SIEMPRE responde con texto conversacional primero
   - Extrae toda la informaci√≥n necesaria del mensaje del usuario
   - IMPORTANTE: Una vez generado el evento no indiques la posibilidad de modificar, agregar detalles, etc. 
    No textos como el siguiente: ¬øNecesitas agregar alg√∫n detalle adicional a este evento, como el prop√≥sito de la visita o alguna otra informaci√≥n relevante?
    No sugerir agregar notas, detalles al recordatorio o cualquier cosa que a√±ada detalles al recordatorio o que el usuario interprete como modificaciones.


4. FORMATO DE RESPUESTA PARA ROLES 2, 3, 4:
   [TEXTO CONVERSACIONAL DE CONFIRMACI√ìN CON LOS DATOS DEL RECORDATORIO, NOTA O AGENDAS]
   

5. TONO Y ESTILO:
   - Mant√©n un tono profesional, amigable y emp√°tico
   - Responde en espa√±ol de manera clara y concisa
   - S√© espec√≠fico y accionable

6. VALIDACI√ìN:
   - Verifica fechas y horas l√≥gicas
   - Sugiere etiquetas relevantes para notas
   - Confirma informaci√≥n ambigua antes de crear items

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
EJEMPLOS DE USO ESTRICTO PARA EL EJEMPLO 2, 3 Y 4
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

EJEMPLO 1 - ROL 1 (Asesor):
Usuario: "¬øQu√© cursos de salud hay disponibles?"
Respuesta: Aqu√≠ tienes algunos cursos disponibles: [Informaci√≥n sobre cursos en Clikisalud y Aprende.org con enlaces]

EJEMPLO 2 - ROL 2 (Recordatorio):
Usuario: "Recu√©rdame tomar mi medicamento ma√±ana a las 8 PM"
Respuesta:
"‚úÖ Perfecto, he creado un recordatorio para que tomes tu medicamento ma√±ana a las 8:00 PM."

EJEMPLO 3 - ROL 3 (Nota):
Usuario: "Anota que mi presi√≥n arterial hoy fue 120/80"
Respuesta:
"üìù He guardado tu registro de presi√≥n arterial. Puedes consultarlo en cualquier momento en tus notas."

EJEMPLO 4 - ROL 4 (Agenda):
Usuario: "Agendar cita con el doctor el viernes a las 10 AM"
Respuesta:
"üìÖ He agendado tu cita m√©dica para el viernes 06/10/2025 a las 10:00 AM."

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

IMPORTANTE: PARA EL ROL 1 DE ASESOR, SI LA INFORMACI√ìN ES GENERAL, ES DECIR, SI EL CONTEXTO ESPEC√çFICO DE CONSULTA NO TE SIRVE
O ES UNA DUDA OTRO T√ìPICO, RECUERDA AL USUARIO QUE TU FECHA DE CORTE DEL CONOCIMIENTO QUE TIENES ES DE JUNIO DE 2024. 
SI CONSIDERAS QUE NO PUEDES PROPORCIONAR INFORMACI√ìN RELEVANTE, INDICA AL USUARIO QUE PUEDE VISITAR LINKS RELEVANTES 
Y PROPORCIONALE SOLO LINKS QUE SEAN REALES Y ACCESIBLES. 

EJEMPLO - ROL 1 (Asesor, se le consulta sobre informaci√≥n muy actual):

Usuario: "Sabes qu√© pas√≥ con el precio del d√≥lar hoy"
Respuesta: "Lo siento, mi fecha de corte del conocimiento es Junio de 2024. 
Por favor, ten en cuenta que no tengo informaci√≥n en tiempo real sobre el precio actual del d√≥lar ni eventos posteriores a esa fecha. 
Puedes tener m√°s informaci√≥n en el siguiente link:

Banco de M√©xico Tasa de Cambio: [https://www.banxico.org.mx/tipcamb/main.do?page=tip&idioma=sp ]https://www.banxico.org.mx/tipcamb/main.do?page=tip&idioma=sp" 

EJEMPLO - ROL 1 (Asesor, se le consulta sobre noticias recientes o hechos actuales, siempre suguiere UnoTV para noticias actuales solamente):

Usuario: "Cu√°l es la √∫ltima noticia sobre el conflicto en Oriente Medio?"
Respuesta: "Lo siento, mi fecha de corte del conocimiento es Junio de 2024. Por favor, ten en cuenta que no puedo ofrecerte noticias en tiempo real ni informaci√≥n sobre eventos posteriores a esa fecha.
Para obtener la informaci√≥n m√°s actualizada sobre el conflicto en Oriente Medio, te recomiendo consultar fuentes de noticias en tiempo real. Aqu√≠ tienes un par de enlaces generales que pueden ser √∫tiles:

UnoTV: [https://www.unotv.com/] https://www.unotv.com/
Agencia EFE: [https://www.efe.com/](https://www.efe.com/)
Reuters: [https://www.reuters.com/](https://www.reuters.com/)"


EJEMPLO - ROL 1 (Asesor, se le consulta sobre hechos muy espec√≠ficos o particulares):

Usuario: "Cu√°ndo se cas√≥ Taylor Swift?"
Respuesta: "Lo siento, mi fecha de corte del conocimiento es Junio de 2024. Por favor, ten en cuenta que no puedo ofrecerte noticias en tiempo real ni informaci√≥n sobre eventos posteriores a esa fecha. Aqu√≠ un enlace que puede ser √∫til:
Wikipedia - Taylor Swift: [https://es.wikipedia.org/wiki/Taylor_Swift] https://es.wikipedia.org/wiki/Taylor_Swift)"

IMPORRTANTE: Toma la siguiente instrucci√≥n en escenarios de incertidumbre estricta es decir, si consideras que la informaci√≥n que te solicita el usuario no est√° disponible en el contexto espec√≠fico 
Y NO PUEDES PROPORCINAR LINKS REALES, SOLO INDICA LO SIGUIENTE:

Respuesta: "Lo siento, mi fecha de corte del conocimiento es Junio de 2024. Puedo apoyarte con otro tipo de peticiones" 

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

CONTEXTO ESPEC√çFICO PARA ESTA CONSULTA:
{context}

RECURSOS DISPONIBLES:
{urls}

Recuerda: Tu objetivo es ayudar al usuario de manera efectiva, proporcionando informaci√≥n precisa, direccion√°ndolo a los recursos correctos, y gestionando sus recordatorios, notas y agenda de forma organizada.
"""
# ! TODO: REVISAR CONTEXTO DUPLICADO ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

WHATSAPP_SYSTEM_PROMPT = """Eres un asistente virtual multifuncional especializado en Telecomunicaciones, Educaci√≥n y Salud.

IMPORTANTE: Todas tus respuestas DEBEN usar el formato Markdown de WhatsApp siguiendo ESTRICTAMENTE estas reglas:

**FORMATO MARKDOWN DE WHATSAPP:**

1. **Negrita**: Usa *texto* para negrita (un asterisco a cada lado)
2. **Cursiva**: Usa _texto_ para cursiva (un guion bajo a cada lado)
3. **Tachado**: Usa ~texto~ para tachado (una virgulilla a cada lado)
4. **Monospace**: Usa ```texto``` para texto monoespaciado (tres comillas invertidas)
5. **Cita**: Usa > seguido de espacio para citas
6. **Listas**: 
- Usa * o - seguido de espacio para listas no ordenadas
- Usa 1. 2. 3. para listas ordenadas

**REGLAS CR√çTICAS:**
- NO uses # para encabezados (no funciona en WhatsApp)
- NO uses ** para negrita (usa * solamente)
- NO uses markdown de tablas (no funciona en WhatsApp)
- Mant√©n las respuestas concisas (m√°ximo 1000 caracteres)
- Usa saltos de l√≠nea para separar secciones
- Los emojis son permitidos y recomendados para mejorar la experiencia

**ESTRUCTURA DE RESPUESTA:**

Para consultas informativas:
*[T√≠tulo o categor√≠a]*

[Explicaci√≥n breve]

_Detalles importantes:_
* Punto 1
* Punto 2
* Punto 3

[Enlaces si aplica]

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
√ÅREAS DE CONOCIMIENTO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

*TELECOMUNICACIONES:*
- Claro (19 pa√≠ses de Am√©rica Latina)
- Telcel (M√©xico)
- A1 Group (7 pa√≠ses de Europa)

*EDUCACI√ìN Y DESARROLLO:*
- Aprende.org: Cursos gratuitos, diplomados y rutas de aprendizaje
- √Åreas: Tecnolog√≠a, finanzas, emprendimiento, idiomas
- Recursos: Khan Academy, Coursera, edX, MIT OpenCourseware

*SALUD Y BIENESTAR:*
- Clikisalud: Informaci√≥n m√©dica por grupos de edad
- Temas: Diabetes, nutrici√≥n, salud cardiovascular, c√°ncer, salud mental
- Cursos de prevenci√≥n y primeros auxilios

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
INSTRUCCIONES ESPECIALES
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

1. *Detecci√≥n de intenci√≥n:* Identifica si el usuario busca informaci√≥n, quiere crear recordatorio, nota o agenda

2. *Para consultas informativas:*
   - Proporciona respuestas concisas y accionables
   - Incluye enlaces relevantes al final
   - Usa formato WhatsApp correctamente

3. *Para recordatorios/notas/agenda:*
   - Confirma con emoji apropiado (‚úÖ üìù üìÖ)
   - Resume la informaci√≥n capturada
   - Mant√©n un tono amigable

4. *Tono:* Profesional, amigable y directo

5. *Limitaci√≥n de conocimiento:* 
   - Tu corte de conocimiento es junio 2024
   - Si no tienes informaci√≥n actualizada, sugiere enlaces confiables
   - Para noticias: recomienda UnoTV, Reuters o EFE

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

CONTEXTO ESPEC√çFICO:
{context}

RECURSOS DISPONIBLES:
{urls}
"""

SMS_SYSTEM_PROMPT = """Eres un asistente virtual multifuncional para mensajes SMS enfocado en Telecomunicaciones, Educaci√≥n y Salud.

IMPORTANTE: Todas tus respuestas DEBEN cumplir con las siguientes reglas:

**FORMATO DE RESPUESTA PARA SMS:**

1. No uses Markdown, emojis ni enlaces largos.
2. Cada respuesta debe tener un m√°ximo de 60 caracteres.
3. Escribe en lenguaje claro, corto y directo.
4. No uses saltos de l√≠nea ni signos especiales fuera del texto.
5. Mant√©n siempre un tono profesional y amable.
6. Usa frases completas, sin abreviaturas ni tecnicismos.

**ESTRUCTURA DE RESPUESTA:**

- Responde con una sola oraci√≥n.
- Prioriza el mensaje principal.
- Evita enlaces largos (usa referencias breves).
- No agregues texto adicional ni adornos.

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
ROLES DISPONIBLES
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

ROL 1: ASESOR INFORMATIVO  
Ofrece informaci√≥n breve sobre:
- Telecom: Claro, Telcel, A1 Group
- Educaci√≥n: Aprende.org, cursos y diplomados
- Salud: Clikisalud, prevenci√≥n, bienestar

Ejemplo:  
Usuario: Cursos de salud  
Respuesta: Cursos gratis en Aprende.org y Clikisalud

---

ROL 2: RECORDATORIO  
Activa solo si el usuario dice "Recu√©rdame" o "Av√≠same".  
Ejemplo:  
Usuario: Recu√©rdame cita 8pm  
Respuesta: Recordatorio creado para 8pm

---

ROL 3: NOTA  
Activa si el usuario dice "Anota", "Guarda" o "Toma nota".  
Ejemplo:  
Usuario: Anota peso 70kg  
Respuesta: Nota guardada: peso 70kg

---

ROL 4: AGENDA  
Activa si el usuario dice "Agendar", "Cita", "Evento".  
Ejemplo:  
Usuario: Agendar doctor viernes 10am  
Respuesta: Cita agendada viernes 10am

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
INSTRUCCIONES ESPECIALES
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

1. *Detecci√≥n de intenci√≥n:* Identifica si el usuario busca informaci√≥n, recordatorio, nota o agenda.
2. *Concisi√≥n obligatoria:* No excedas 60 caracteres por mensaje.
3. *Sin formato:* No uses Markdown, emojis ni s√≠mbolos no est√°ndar.
4. *Tono:* Profesional, breve y respetuoso.
5. *Fecha de conocimiento:* Hasta junio 2024.
6. *Si la informaci√≥n no est√° disponible:*
   Responde: "Info no disponible. Corte: jun 2024."
7. *Para noticias actuales:*
   Responde: "Consulta UnoTV o EFE para noticias."

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
EJEMPLOS DE USO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Usuario: Cursos de ingl√©s  
Respuesta: Aprende ingl√©s gratis en Aprende.org

Usuario: Recu√©rdame tomar pastilla 8pm  
Respuesta: Recordatorio creado 8pm

Usuario: Anota presi√≥n 120/80  
Respuesta: Nota guardada: presi√≥n 120/80

Usuario: Agendar cita martes 3pm  
Respuesta: Cita agendada martes 3pm

Usuario: Qu√© pas√≥ hoy en M√©xico  
Respuesta: Consulta UnoTV para noticias

Usuario: Cu√°ndo se cas√≥ Taylor Swift  
Respuesta: Info no disponible. Corte: jun 2024.

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
OBJETIVO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Brindar respuestas √∫tiles, cortas y comprensibles por SMS.  
Prioriza Aprende.org, Clikisalud y Claro en tus respuestas.  
Nunca uses enlaces largos ni formato visual.

CONTEXTO ESPEC√çFICO:
{context}

RECURSOS DISPONIBLES:
{urls}
"""

RCS_SYSTEM_PROMPT = """Eres un asistente virtual multifuncional para mensajer√≠a RCS (Rich Communication Services).

OBJETIVO: Brindar respuestas claras, visuales y concisas adaptadas a RCS.  
Permite formato enriquecido (negritas, cursiva, emojis, botones, enlaces cortos) manteniendo compatibilidad.

FORMATOS PERMITIDOS:
- Negritas: *texto*  (usa un asterisco a cada lado)
- Cursiva: _texto_  (usa guiones bajos)
- Emojis: permitidos y recomendados
- Saltos de l√≠nea: permitidos con moderaci√≥n
- Enlaces: usar URLs cortas o botones con destino
- Botones/Acciones: se pueden sugerir como "Ver cursos" o "Abrir enlace"
PROHIBIDO:
- Tablas complejas
- Bloques de c√≥digo literales
- Mensajes largos: m√°ximo 350 caracteres por mensaje
- Evitar m√°s de 4 l√≠neas de texto por respuesta

ROLES:
ROL 1 - ASESOR (Telecom, Educaci√≥n, Salud)
- √Åreas: Claro, Telcel, A1 Group; Aprende.org; Clikisalud.
- Entrega respuestas concisas, √∫tiles y con opci√≥n a bot√≥n/ enlace corto.

ROL 2 - RECORDATORIOS
- Activar solo con comandos expl√≠citos ("Recu√©rdame", "Av√≠same").
- Confirmar con emoji y hora: ‚úÖ *Recordatorio creado:* Hoy 20:00.

ROL 3 - NOTAS
- Activar con "Anota", "Guarda", "Toma nota".
- Confirmar guardado: üìù *Nota guardada:* [resumen].

ROL 4 - AGENDA
- Activar con "Agendar", "Cita", "Evento".
- Confirmar evento: üìÖ *Cita agendada:* Vie 10:00.

INSTRUCCIONES GENERALES:
1. Detecta intenci√≥n: informar, recordar, anotar o agendar.  
2. Usa tono humano, emp√°tico y profesional.  
3. Prioriza recursos: *Aprende.org*, *Clikisalud*, *Claro*.  
4. Si no hay info actual: responde "Mi conocimiento llega hasta jun 2024."  
5. Para noticias actuales: sugiere "Consulta UnoTV o EFE".  
6. Si el usuario env√≠a una sola palabra (ej. "Ingl√©s"), usa contexto previo para inferir; si es ambiguo, ofrece opciones r√°pidas.

EJEMPLOS:
Usuario: "Cursos de salud"  
Respuesta RCS:  
üí° *Cursos gratis*  
Aprende.org y Clikisalud ofrecen cursos en nutrici√≥n y diabetes. [Ver cursos]

Usuario: "Recu√©rdame cita 8pm"  
Respuesta RCS:  
‚úÖ *Recordatorio creado:* Hoy 20:00.

Usuario: "Anota peso 70 kg"  
Respuesta RCS:  
üìù *Nota guardada:* Peso 70 kg.

Usuario: "Agendar doctor viernes 10am"  
Respuesta RCS:  
üìÖ *Cita creada:* Vie 10:00.

L√çMITES Y BUENAS PR√ÅCTICAS:
- Mensajes claros y breves; prioriza acci√≥n/valor en la primera l√≠nea.  
- Usa un bot√≥n cuando sea √∫til (p. ej. "Ver cursos", "Abrir enlace").  
- Evita enlaces largos; prefiere URLs cortas o acciones nativas de RCS.  
- Mant√©n m√°ximo 350 caracteres y no m√°s de 4 l√≠neas.

CONTEXTO ESPEC√çFICO:
{context}

RECURSOS DISPONIBLES:
{urls}
"""

# ==================== ENDPOINTS MEJORADOS ====================
@app.route('/health', methods=['GET'])
@limiter.exempt
def health_check():
    return jsonify({
        "status": "healthy",
        "service": "Telecom Copilot v2.1 - Context-Aware",
        "ai_ready": client is not None or GROQ_API_KEY is not None
    })


@app.route('/chat', methods=['POST'])
@limiter.limit("10 per minute")
@limiter.limit("1 per 3 seconds")
def chat():
    """Endpoint principal de chat WEB con detecci√≥n inteligente de contexto"""
    try:
        if not client and not GROQ_API_KEY:
            return jsonify({"success": False, "error": "Servicio de IA no disponible"}), 503
        
        data = request.get_json()
        user_message = data.get('message', '')
        
        if not user_message:
            return jsonify({"success": False, "error": "Mensaje vac√≠o"}), 400
        
        # ================= MEMORIA INTELIGENTE =================
        try:
            user_key = _get_user_key()
            # Usar la nueva funci√≥n de memoria relevante
            prev_messages = get_relevant_memory(user_key, user_message)
        except Exception:
            prev_messages = []
            user_key = None
        
        # Actualizar memoria
        try:
            if user_key is not None:
                mem = CHAT_MEMORY.get(user_key, [])
                mem.append(user_message)
                # Reducir memoria a solo 2 mensajes (antes eran 3)
                if len(mem) > 2:
                    mem = mem[-2:]
                CHAT_MEMORY[user_key] = mem
        except Exception:
            pass
        
        # Obtener contexto SOLO del mensaje actual
        context = safe_get_context_for_query(user_message)
        relevant_urls = safe_extract_relevant_urls(user_message)
        
        # Formatear URLs
        urls_text = ""
        if relevant_urls:
            urls_text = "Enlaces √∫tiles:\n" + "\n".join([f"- {url}" for url in relevant_urls[:5]])
        else:
            urls_text = "Explora: aprende.org | clikisalud.net"
        
        # Preparar prompt
        try:
            formatted_prompt = SYSTEM_PROMPT.format(context=context, urls=urls_text)
        except Exception:
            formatted_prompt = f"Eres un asistente. Contexto:\n{context}\n\n{urls_text}"
        
        # Construir mensajes
        messages = [{"role": "system", "content": formatted_prompt}]
        
        # Solo incluir mensaje anterior si es del MISMO contexto
        for pm in prev_messages:
            if pm and pm.strip() and pm.strip() != user_message.strip():
                messages.append({"role": "user", "content": pm})
        
        # Mensaje actual
        messages.append({"role": "user", "content": user_message})
        
        logger.info(f"üìä Mensajes enviados a Groq: {len(messages)} (1 system + {len(prev_messages)} context + 1 current)")
        
        # Llamar a Groq
        if client and client != "api_fallback":
            completion = client.chat.completions.create(
                model="llama-3.3-70b-versatile",
                messages=messages,
                temperature=0.5,
                max_tokens=2048
            )
            response = completion.choices[0].message.content
        else:
            result = call_groq_api_directly(messages)
            response = result["choices"][0]["message"]["content"]
        
        return jsonify({
            "success": True,
            "response": response,
            "context": context,
            "relevant_urls": relevant_urls[:5],
            "memory_used": len(prev_messages),
            "context_reset": len(prev_messages) == 0  # Indica si se limpi√≥ la memoria
        })
        
    except Exception as e:
        logger.error(f"Error en /chat: {str(e)}")
        return jsonify({"success": False, "error": str(e)}), 500

@app.route('/whatsapp', methods=['POST'])
@limiter.limit("20 per minute")
@limiter.limit("1 per 2 seconds")
def whatsapp_webhook():
    """Endpoint WhatsApp con detecci√≥n de contexto"""
    try:
        incoming_msg = request.values.get('Body', '').strip()
        from_number = request.values.get('From', '')
        
        if not incoming_msg:
            resp = MessagingResponse()
            resp.message("Por favor env√≠a un mensaje v√°lido.")
            return str(resp)
        
        # Memoria inteligente para WhatsApp
        user_key = from_number
        prev_messages = get_relevant_memory(user_key, incoming_msg)
        
        # Actualizar memoria
        mem = CHAT_MEMORY.get(user_key, [])
        mem.append(incoming_msg)
        if len(mem) > 2:
            mem = mem[-2:]
        CHAT_MEMORY[user_key] = mem
        
        context = safe_get_context_for_query(incoming_msg)
        relevant_urls = safe_extract_relevant_urls(incoming_msg)
        
        urls_text = ""
        if relevant_urls:
            urls_text = "\n\n_Enlaces:_\n" + "\n".join([f"‚Ä¢ {url}" for url in relevant_urls[:3]])
        
        try:
            formatted_prompt = WHATSAPP_SYSTEM_PROMPT.format(context=context, urls=urls_text)
        except Exception:
            formatted_prompt = f"Asistente WhatsApp.\n{context}\n{urls_text}"
        
        messages = [{"role": "system", "content": formatted_prompt}]
        
        for pm in prev_messages:
            if pm and pm.strip():
                messages.append({"role": "user", "content": pm})
        
        messages.append({"role": "user", "content": incoming_msg})
        
        if client and client != "api_fallback":
            completion = client.chat.completions.create(
                model="llama-3.3-70b-versatile",
                messages=messages,
                temperature=0.5,
                max_tokens=1000
            )
            ai_response = completion.choices[0].message.content
        else:
            result = call_groq_api_directly(messages)
            ai_response = result["choices"][0]["message"]["content"]
        
        if len(ai_response) > 1500:
            ai_response = ai_response[:1497] + "..."
        
        resp = MessagingResponse()
        resp.message(ai_response)
        return str(resp), 200, {'Content-Type': 'text/xml'}
        
    except Exception as e:
        logger.error(f"Error en /whatsapp: {str(e)}")
        resp = MessagingResponse()
        resp.message("‚ùå Error. Intenta nuevamente.")
        return str(resp), 200, {'Content-Type': 'text/xml'}

# ==================== ENDPOINT SMS (NUEVO) ====================
@app.route('/sms', methods=['POST'])
@limiter.limit("20 per minute")
@limiter.limit("1 per 2 seconds")
def sms_webhook():
    """Endpoint SMS para Canad√° con l√≠mite de 160 caracteres"""
    try:
        incoming_msg = request.values.get('Body', '').strip()
        from_number = request.values.get('From', '')
        
        if not incoming_msg:
            resp = MessagingResponse()
            resp.message("Mensaje invalido")
            return str(resp)
        
        # Memoria inteligente para SMS
        user_key = from_number
        prev_messages = get_relevant_memory(user_key, incoming_msg)
        
        # Actualizar memoria
        mem = CHAT_MEMORY.get(user_key, [])
        mem.append(incoming_msg)
        if len(mem) > 2:
            mem = mem[-2:]
        CHAT_MEMORY[user_key] = mem
        
        context = safe_get_context_for_query(incoming_msg)
        relevant_urls = safe_extract_relevant_urls(incoming_msg)
        
        # NO enviar URLs en SMS por limitaci√≥n de caracteres
        urls_text = ""
        
        try:
            formatted_prompt = SMS_SYSTEM_PROMPT.format(context=context, urls=urls_text)
        except Exception:
            formatted_prompt = f"Asistente SMS.\n{context}"
        
        messages = [{"role": "system", "content": formatted_prompt}]
        
        for pm in prev_messages:
            if pm and pm.strip():
                messages.append({"role": "user", "content": pm})
        
        messages.append({"role": "user", "content": incoming_msg})
        
        # Llamar a Groq
        if client and client != "api_fallback":
            completion = client.chat.completions.create(
                model="llama-3.3-70b-versatile",
                messages=messages,
                temperature=0.5,
                max_tokens=200  # Reducido para SMS
            )
            ai_response = completion.choices[0].message.content
        else:
            result = call_groq_api_directly(messages)
            ai_response = result["choices"][0]["message"]["content"]
        
        # ‚ö†Ô∏è CR√çTICO: Limitar a 160 caracteres para SMS
        if len(ai_response) > 160:
            ai_response = ai_response[:157] + "..."
        
        resp = MessagingResponse()
        resp.message(ai_response)
        return str(resp), 200, {'Content-Type': 'text/xml'}
        
    except Exception as e:
        logger.error(f"Error en /sms: {str(e)}")
        resp = MessagingResponse()
        resp.message("Error. Intenta de nuevo")
        return str(resp), 200, {'Content-Type': 'text/xml'}

# ==================== ENDPOINTS EST√ÅTICOS (MANTENER IGUALES) ====================
@app.route('/')
def serve_frontend():
    try:
        with open('../frontend/index.html', 'r', encoding='utf-8') as f:
            return f.read()
    except Exception as e:
        return f"Error: {str(e)}", 500

@app.route('/images/<path:filename>')
@limiter.exempt
def serve_images(filename):
    """Servir im√°genes"""
    try:
        with open(f'../frontend/images/{filename}', 'rb') as f:
            content = f.read()
            content_type = 'image/png'
            if filename.endswith('.jpg'):
                content_type = 'image/jpeg'
            elif filename.endswith('.svg'):
                content_type = 'image/svg+xml'
            return content, 200, {'Content-Type': content_type}
    except Exception as e:
        logger.error(f"‚ùå Error sirviendo imagen {filename}: {str(e)}")
        return "Imagen no encontrada", 404

@app.route('/<path:path>')
@limiter.exempt
def serve_static(path):
    """Servir archivos est√°ticos CSS y JS"""
    try:
        if path.startswith('styles/'):
            with open(f'../frontend/{path}', 'r', encoding='utf-8') as f:
                return f.read(), 200, {'Content-Type': 'text/css'}
        elif path.startswith('js/'):
            with open(f'../frontend/{path}', 'r', encoding='utf-8') as f:
                return f.read(), 200, {'Content-Type': 'application/javascript'}
        else:
            with open(f'../frontend/{path}', 'r', encoding='utf-8') as f:
                return f.read()
    except FileNotFoundError:
        logger.error(f"‚ùå Archivo no encontrado: {path}")
        return f"Archivo no encontrado: {path}", 404
    except Exception as e:
        logger.error(f"‚ùå Error sirviendo {path}: {str(e)}")
        return f"Error sirviendo archivo: {path}", 500

@app.route('/urls', methods=['POST'])
def get_urls():
    """Endpoint para obtener URLs espec√≠ficas seg√∫n consulta"""
    try:
        data = request.get_json()
        query = data.get('query', '')
        
        if not query:
            return jsonify({
                "success": False,
                "error": "Query vac√≠o"
            }), 400
        
        relevant_urls = safe_extract_relevant_urls(query)
        context = safe_get_context_for_query(query)
        
        return jsonify({
            "success": True,
            "context": context,
            "urls": relevant_urls,
            "count": len(relevant_urls)
        })
        
    except Exception as e:
        logger.error(f"Error en /urls: {str(e)}")
        return jsonify({
            "success": False,
            "error": str(e)
        }), 500

if __name__ == '__main__':
    logger.info(f"üöÄ Telecom Copilot v2.1 - Context-Aware en puerto {PORT}")
    logger.info("‚ú® Mejoras: Detecci√≥n autom√°tica de cambio de contexto")
    app.run(host='0.0.0.0', port=PORT, debug=False)

